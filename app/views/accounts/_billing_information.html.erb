<div class="modal-header"></div>

<div class="modal-content mb-30">
  <%= render partial: "subscription_details" %>
</div>

<div class="bb-gray-med mb-30 mt-30">
</div>

<div class="modal-content overflow-y-visible p-rel">
  
  <h1>Payment Information</h1>

  <div class="card-info">
    <span id="payment-errors" style="color: red"></span>
  </div>


  <%= label_tag "user_subscription_attributes_name_on_card", 'Name on Card' %><br>
  <%= text_field_tag "user[subscription_attributes][name_on_card]" %>

  <%= label_tag "user_subscription_attributes_card_number", 'Card Number' %><br>
  <%= text_field_tag "user[subscription_attributes][card_number]", 
    "",
    "data-stripe" => "number" 
  %>

    <%= label_tag "user_subscription_attributes_expiration_month", 'Expiration Date' %><br>
    <div class='styled-select small-width inline-block'>
      <%= select_tag "user[subscription_attributes][expiration_month]", 
        options_for_select(Date::MONTHNAMES.compact.map.with_index { |m, i| [m, i]}),  
        include_blank: "Month",
        "data-stripe" => "exp_month",
        class: 'small-width'
      %>
    </div>
    <div class="styled-select-separator">/</div>
    <div class='styled-select small-width inline-block'>
      <%= select_tag "user[subscription_attributes][expiration_year]", 
        options_for_select(card_expiration_years), 
        include_blank: "Year",
        "data-stripe" => "exp_year",
        class: 'small-width'
      %>
    </div><br>

    <%= label_tag "user_subscription_attributes_cvc", 'CV Code' %><br>
    <p>
      <%= text_field_tag "user[subscription_attributes][cvc]", "", "data-stripe" => "cvc", class: 'small-width inline-block' %>
      <%= image_tag(cvv_code_image, class: "inline-block ml-10 cvv-card b-40", alt: 'CVV Code') %>
    </p>

  <%= hidden_field_tag "user[subscription_attributes][stripe_token]", "" %>

  <div>
    <%= link_to "Submit", 'javascript:void(0);' , onClick: "addCreditCard(); return false", id: "submit-cc-button", class: "button primary-button big-button" %>
  </div>
</div>

<%= javascript_include_tag "https://js.stripe.com/v2/" %>

<script>
  Stripe.setPublishableKey('<%= ENV["STRIPE_PUBLIC_KEY"] %>')
  function stripeResponseHandler(status, response) {
    if (response.error) {
      $('#payment-errors').text(response.error.message);
      $('#submit-cc-button').prop('disabled', false);
    } else {
      $("input[id=user_subscription_attributes_stripe_token]").val(response.id);
      $('#account-form').submit();  // XXX: Remove for golive
    }
  }

  function paymentEntryStarted() {
    return (
        $("#user__card_number").val() != "" ||
        $("#user_subscription_attributes_expiration_month").val() != "" ||
        $("#user_subscription_attributes_expiration_year").val() != "" 
      );
  }
 
  function addCreditCard() {
    if (paymentEntryStarted()) {
      // conditional prevents the form from breaking if not updating card
      $('#submit-cc-button').prop('disabled', true);
      var attrs = {
        number: $("#user_subscription_attributes_card_number").val(),
        exp_month: $("#user_subscription_attributes_expiration_month").val(),
        exp_year: $("#user_subscription_attributes_expiration_year").val(),
        cvc: $("#user_subscription_attributes_cvc").val() 
      }
      Stripe.card.createToken(attrs, stripeResponseHandler);
      return false;
    }
  }

  function updatePromoRow(data) {
    if (isNaN(data['amount_off'])) {
      $('#promo-code-text').html('Error!');
      return
    } else {
      $('#promo-code-text').html('');
    }
    $('#promo-name').text(data['id']);
    $('#promo-description').text(data['id']);
    var discount = data['amount_off'] / 100.0
    $('#promo-price').text('-$ ' + discount);
    var numberRegex = /\d+(\.\d+)?/g
    var currentTotalValue = parseFloat($('#subscription-total').text().match(numberRegex))
    var newTotal = ((currentTotalValue - discount) < 0) ? 0 : (currentTotalValue - discount)
    $('#subscription-total').text('$ ' + newTotal);
    $('#promo-row').show();
  }

  function clearPromoRow(data) {
    $('#user_subscription_attributes_promo_code').val('');
    $('#promo-name').text('');
    $('#promo-description').text('');
    $('#promo-price').text('');
    $('#promo-row').hide();
  }

  function applyPromoCode() {
    var data = $('#user_subscription_attributes_promo_code').serialize();
    updateSubscription()
    $.post("<%= apply_promo_code_account_path %>", data, updatePromoRow)
    .fail(function() {
      $('#promo-code-text').html('Error!');
    })
  }

  function updateSubscription() {
    var subscriptions=<%= Subscription.plans.to_json.html_safe %>
    var select = $('#user_subscription_attributes_plan_id').prop('selectedIndex');

    var interval = "annually";
    var today = new Date()
    var billedData = (today.getMonth() + 1) + '/' + today.getDate() + '/' + (today.getFullYear() + 1)
    if (subscriptions[select]['interval'] === 'month') {
      billedData = (today.getMonth() + 2) + '/' + today.getDate() + '/' + today.getFullYear()
      interval = "monthly";
    }
    var description = "This amount will be billed to your account on " + billedData;
    $('#subscription-description').text(description);

    var price = '$ ' + (subscriptions[select]['amount'] / 100.0).toFixed(2);
    $('#subscription-price').text(price);
    $('#subscription-total').text(price);
    clearPromoRow();
  }

  updateSubscription();
  clearPromoRow();

</script>
