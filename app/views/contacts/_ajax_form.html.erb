<button class="primary-button big-button hidden" data-modal-id="wizard-modal" id="show-modal-button">
  Wizard Modal
</button>
<div id="wizard-modal" class="modal wizard-modal modal-no-js">
  <div class="step-wizard">
    <div class="inner-step contact-modal" onclick="wizNav(1)">
      <span id="step-1" class="inner-counter">
        1
      </span>
      <span class="modal-step-title">General</span>
    </div>
    <div class="inner-step contact-modal" onclick="wizNav(2)">
      <span id="step-2" class="inner-counter">
        2
      </span>
      <span class="modal-step-title">Details</span>
    </div>
    <div class="inner-step contact-modal" onclick="wizNav(3)">
      <span id="step-3" class="inner-counter">
        3
      </span>
      <span class="modal-step-title">Avatar</span>
    </div>
  </div>
  <div class="modal-header">
    <h2><%= @contact.new_record? ? 'Add' : 'Edit' %> Contact</h2>
  </div>
  <div class="modal-content">
    <%= form_for @contact, remote: true, :html => {:id => "contact-form"} do |f| %>
      <div id="error_explanation">
        <ul>
        </ul>
      </div>
      <% errors = @contact.errors.any? %>
      <%= render :partial => '/contacts/form_content', locals: { f: f, errors: errors } %>
    <% end %>
  </div>
  <footer class="modal-footer">
    <button id="save-btn" class="js-modal-close primary-button big-button" onclick="$('#contact-form').submit();">Save</button>
    <a href="javascript:;" id='next-step' class=" button secondary-button big-button"
    onclick="wizNav(currentStep+1); return false;">Next</a>
    <%= link_to 'Cancel', "javascript:void(0)", class: "js-modal-close outline-button big-button margin-right", id: 'close-form-link' %>
    <% if @contact.persisted? %>
      <%= link_to 'Delete', contact_path(@contact), method: :delete, data: { confirm: 'Are you sure?' }, class: "js-modal-close outline-button big-button" %>
    <% end %>
  </footer>
</div>


<%#= link_to 'Back', contacts_path #%>
<script>

var currentSelectedInput = ''; // XXX: This stores which input is selected

var currentStep = 1;

var contactScreenShift = function(element) {
  var offset = $(document).scrollTop()
  element.css("margin-top", offset + "px")
}

var displayContactFormModal = function() {
  contactScreenShift($('#wizard-modal'))
  $("body").append("<div class='modal-overlay js-modal-close'></div>");
  $(".modal-overlay").fadeTo(500, 0.8);
  $(".js-modalbox").fadeIn(500);
  canvasEl = $('button[data-modal-id]');
  var modalBox = $(canvasEl).attr('data-modal-id');
  $('#' + modalBox).fadeIn($(canvasEl).data());
  wizNav(1);
}

var new_contact_disable = function() {
  var self = $(this)
  if (self.hasClass('chosen-container-multi')) {

    var id = self[0].id
    var element = $('#' + id).find('.create-new')
    if (!element.hasClass('inactive')) {
      element.addClass('inactive');
      setTimeout(function() {
        element.removeClass('inactive');

        var multiDropDowns = document.querySelectorAll('#' + id + '.chosen-container.chosen-container-multi')
        for (var i = 0; i < multiDropDowns.length; i++) {
          multiDropDowns[i].removeEventListener('mousedown', new_contact_disable)
        }
      }, 700);
    }
  }
};

document.body.addEventListener('mouseover', function(event) {
  if (event.target.closest('.chosen-container-multi') === null) {
    event.stopPropagation();
    var multiDropDowns = document.querySelectorAll('.chosen-container.chosen-container-multi')
    for (var i = 0; i < multiDropDowns.length; i++) {
      multiDropDowns[i].addEventListener('mousedown', new_contact_disable)
    }
  }
});

var handleSelectOnChange = function(selectInput) {
  var selectedOption = $('option:selected:first', selectInput);
  if (selectedOption.val() === 'create_new_contact') {
    currentSelectedInput = $(selectInput);
    // remove 'create_new_contact from select box
    selectedOption.removeAttr('selected');
    $(selectInput).trigger("chosen:updated");

    contact_type_handle($('#contact_contact_type'), true)
    displayContactFormModal();
  }
}

var closeContactFormModal = function() {
  $(".modal, .modal-overlay").fadeOut(500, function() {
    cleanErrorMessages();
    clearAvatarPhoto();
    $("#contact-form").trigger("reset");
    $("#error_explanation ul").empty();
    $(".modal-overlay").remove();
  });
}

var addContactAndCloseModal = function(json) {
  $('.add-new-contactable').each(function(i, obj) {
    position_to_insert_after = json['position'];
    shared_after_id = json['shared_position'];
    var id_value = json['id'];
    if (obj.className.includes('account-owner')) {
      id_value += '_contact'
      if (position_to_insert_after !== 'create_new_contact') {
        position_to_insert_after += '_contact'
      }
      if (shared_after_id !== 'create_new_contact') {
        shared_after_id += '_contact'
      }
    }
    var account_owner_contact_count = $(this).find('option[value=' + position_to_insert_after + ']').length
    if (account_owner_contact_count == 0) {
      position_to_insert_after = shared_after_id
    }
    ($('<option>', {
      value: id_value,
      text: json['firstname'] + ' ' + json['lastname']
    })).insertAfter($(this).children('option[value=' + position_to_insert_after + ']'))

    // XXX: This is a hack to select the new value
    if (!!currentSelectedInput) {
      currentSelectedInput.find("[value='"+id_value+"']").prop('selected', true);
    }
    $(this).trigger("chosen:updated");
  })

  updateAddContactableTable(json);
  addRemoveShareInfoLine(null, {"selected": json['id']})
  toggleCoOwnerView(json['id'])
  closeContactFormModal();
}

if (typeof window.toggleCoOwnerView === 'undefined') {
  var toggleCoOwnerView = function(){}
}

var updateAddContactableTable = function(json) {
  if (typeof tableIdToUpdate === 'undefined') {
    return;
  }
  if ($('.table-add-contactable').find(tableIdToUpdate) == null) {
    return
  } else {
    var table = $(tableIdToUpdate).DataTable();
    table.row.add([
      json['lastname'],
      json['firstname'],
      json['emailaddress'],
      json['relationship']
    ]).draw(false)
    $(tableIdToUpdate).show()
    $(tableIdToUpdate + '-title').show()
    $('.flash.add-contactable').show()
  }
}

var addErrorMessage = function(selector, error_message) {
  $(selector).addClass('input-error');
  $('<span class="error-label"> - ' + error_message + '</span>').insertBefore($(selector));
}

var cleanErrorMessages = function() {
  $('#contact_emailaddress').removeClass('input-error');
  $('#contact_firstname').removeClass('input-error');
  $('.error-label').remove();
}

$(function(){

  $("#contact-form")
    .on("ajax:success", function(e, data, status, xhr) {
      // XXX: This isn't triggering for some reason
        var newContact = JSON.parse(xhr.responseText);
        return addContactAndCloseModal(newContact);
    })
    .on("ajax:error", function(e, xhr, status, error) {
      var contactErrors = JSON.parse(xhr.responseText);

      // XXX: THIS IS A HUGE HACK
      if (!!contactErrors['id']) {
        return addContactAndCloseModal(contactErrors)
      }
      wizNav(1);
      cleanErrorMessages()
      for (var key in contactErrors) {
        if (key === "emailaddress") {
          addErrorMessage('#contact_emailaddress', contactErrors[key][0])
        }
        if (key === "firstname") {
          addErrorMessage('#contact_firstname', contactErrors[key][0])
        }
      }
    });

  $("#close-form-link").click(function() { closeContactFormModal(); });
  //ESPECIALLY THIS GARBAGE
  ['.small-modal', '.medium-modal', '.large-modal'].forEach(function(modalClass) {
    $(window).resize(function() {
      $(modalClass).css({
        top: ($(window).height() - $(".modal").outerHeight()) / 2,
        left: ($(window).width() - $(modalClass).outerWidth()) / 2,
      });
    });
  });
  $(window).resize();
});
</script>
