<script type="text/javascript" src="//api.filestackapi.com/filestack.js"></script>
<button class="primary-button big-button hidden" data-modal-id="wizard-modal" id="show-modal-button">
  Wizard Modal
</button>
<div id="wizard-modal" class="modal wizard-modal modal-no-js">
  <div class="step-wizard">
    <div class="inner-step" onclick="wizNav(1)">
      <span id="step-1" class="inner-counter">
        1
      </span>
      Details
    </div>
    <div class="inner-step" onclick="wizNav(2)">
      <span id="step-2" class="inner-counter">
        2
      </span>
      Relationship
    </div>
    <div class="inner-step" onclick="wizNav(3)">
      <span id="step-3" class="inner-counter">
        3
      </span>Avatar
    </div>
  </div>
  <div class="modal-header">
    <h2><%= @contact.new_record? ? 'Add' : 'Edit' %> Contact</h2>
  </div>
  <div class="modal-content">
    <%= form_for @contact, remote: true, :html => {:id => "contact-form"} do |f| %>
        <div id="error_explanation">
          <ul>
          </ul>
        </div>
      <%= render :partial => '/contacts/form_content', locals: {f: f} %>
    <% end %>
  </div>
  <footer class="modal-footer">
    <a href="javascript:;" id='next-step' class=" button secondary-button big-button"
    onclick="wizNav(currentStep+1); return false;">Next</a>
    <button id="save-btn" class="js-modal-close secondary-button big-button" onclick="$('#contact-form').submit();">Save</button>
    <%= link_to 'Cancel', "javascript:void(0)", class: "js-modal-close button secondary-button big-button", id: 'close-form-link' %>
    <span class='footer_right'>
      <% if @contact.persisted? %>
        <%= link_to 'Delete', contact_path(@contact), method: :delete, data: { confirm: 'Are you sure?' }, class: "js-modal-close button secondary-button big-button" %>
      <% end %>
    </span>
  </footer>
</div>


<%#= link_to 'Back', contacts_path #%>
<script>

var currentSelectInput = ''; // XXX: This stores which input is selected

var currentStep = 1;

var wizNav = function(step){
  currentStep = step;
  if(step===1){
    $("#next-step").show();
    $("#save-btn").hide();
    $("#detail-form").show();
    $("#avatar-form").hide();
    $("#category-form").hide();
    $("#step-1").removeClass().addClass("inner-counter current-step");
    $("#step-1").html('1');
    $("#step-2").removeClass().addClass("inner-counter");
    $("#step-2").html('2');
    $("#step-3").removeClass().addClass("inner-counter");
    $("#step-3").html('3');
    $(".footer_right > a").css("float", "");
  }
  else if(step===2){
    $("#next-step").show();
    $("#save-btn").hide();
    $("#detail-form").hide();
    $("#category-form").show();
    $("#avatar-form").hide();
    $("#step-1").removeClass().addClass("inner-counter completed-step");
    $("#step-1").html('<svg class="icon circle-icon"><use xlink:href="#icon-checkmark-1"> </use></svg>');
    $("#step-2").removeClass().addClass("inner-counter current-step");
    $("#step-2").html('2');
    $("#step-3").removeClass().addClass("inner-counter");
    $("#step-3").html('3');
    $(".footer_right > a").css("float", "");
  }
  else if(step===3){
    $("#next-step").hide();
    $("#save-btn").show();
    $("#detail-form").hide();
    $("#category-form").hide();
    $("#avatar-form").show();
    $("#step-1").removeClass().addClass("inner-counter completed-step");
    $("#step-1").html('<svg class="icon circle-icon"><use xlink:href="#icon-checkmark-1"> </use></svg>');
    $("#step-2").removeClass().addClass("inner-counter completed-step");
    $("#step-2").html('<svg class="icon circle-icon"><use xlink:href="#icon-checkmark-1"> </use></svg>');
    $("#step-3").removeClass().addClass("inner-counter current-step");
    $("#step-3").html('3');
    $(".footer_right > a").css("float", "right");
  }

  if ($("#contact_contact_type").val() === "Family & Beneficiaries") {
    $('#personal_relationship').show();
    $('#personal_relationships_select').removeAttr("disabled");
    $('#professional_relationship').hide();
    $('#professional_relationships_select').prop('disabled', 'disabled');
  }
  else {
    $('#personal_relationship').hide();
    $('#personal_relationships_select').prop('disabled', 'disabled');
    if ($("#contact_contact_type").val() === "Medical Professional") {
      $('#professional_relationship').show();
      $('#professional_relationships_select').removeAttr("disabled");
      $('#medical_professional').show();
      $('#medical_professional').removeAttr("disabled");
      $('#common_professional').hide();
      $('#common_professional').prop('disabled', 'disabled');
    }
    else {
      $('#professional_relationship').show();
      $('#professional_relationships_select').removeAttr("disabled");
      $('#medical_professional').hide();
      $('#medical_professional').prop('disabled', 'disabled');
      $('#common_professional').show();
      $('#common_professional').removeAttr("disabled");
    }
  }
}

var displayContactFormModal = function() {
  $("body").append("<div class='modal-overlay js-modal-close'></div>");
  $(".modal-overlay").fadeTo(500, 0.8);
  $(".js-modalbox").fadeIn(500);
  canvasEl = $('button[data-modal-id]');
  var modalBox = $(canvasEl).attr('data-modal-id');
  $('#' + modalBox).fadeIn($(canvasEl).data());
  wizNav(1);
}

var handleSelectOnChange = function(selectInput) {
  var selectedOption = $('option:selected:last', selectInput);
  if (selectedOption.val() === 'create_new_contact') {
    currentSelectedInput = $(selectInput);
    // remove 'create_new_contact from select box
    selectedOption.removeAttr('selected');
    $(selectInput).trigger("chosen:updated");

    displayContactFormModal();
  }
}

var closeContactFormModal = function() {
  $(".modal, .modal-overlay").fadeOut(500, function() {
    $("#contact-form").trigger("reset");
    $("#error_explanation ul").empty();
    $(".modal-overlay").remove();
  });
}

var addContactAndCloseModal = function(json) {

  $('.add-new-contactable').each(function(i, obj) {
    $(this).append($('<option>', {
      value: json['id'],
      text: json['firstname'] + ' ' + json['lastname']
    }));

    // XXX: This is a hack to select the new value
    if (!!currentSelectedInput) {
      currentSelectedInput.find("[value='"+json['id']+"']").prop('selected', true);
    }
    $(this).trigger("chosen:updated");
  })

  closeContactFormModal();
}


$(function(){

  $("#contact-form")
    .on("ajax:success", function(e, data, status, xhr) {
      // XXX: This isn't triggering for some reason
        var newContact = JSON.parse(xhr.responseText);
        return addContactAndCloseModal(newContact);
    })
    .on("ajax:error", function(e, xhr, status, error) {
      var contactErrors = JSON.parse(xhr.responseText);

      // XXX: THIS IS A HUGE HACK
      if (!!contactErrors['id']) {
        return addContactAndCloseModal(contactErrors)
      }
      for (var key in contactErrors) {
        var errorEl = '<li>' + key + ' ' + contactErrors[key][0] + '</li>';
        $("#error_explanation ul").append(errorEl);
      }
    });

  $("#close-form-link").click(function() { closeContactFormModal(); });
  //ESPECIALLY THIS GARBAGE
  ['.small-modal', '.medium-modal', '.large-modal'].forEach(function(modalClass) {
    $(window).resize(function() {
      $(modalClass).css({
        top: ($(window).height() - $(".modal").outerHeight()) / 2,
        left: ($(window).width() - $(modalClass).outerWidth()) / 2,
      });
    });
  });
  $(window).resize();
});
</script>